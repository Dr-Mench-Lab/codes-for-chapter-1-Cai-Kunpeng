+*In[1]:*+
[source, r]
----
bs.one.samp.dist <- function(dat, N = 1e4){
n <- length(dat) ;
sam <- matrix(sample(dat,size = N * n, replace = TRUE), ncol=N);
sam.mean <- colMeans(sam) ;
old.par <- par(no.readonly =TRUE)
par(mfrow=c(2,1), mar=c(3,2,2,1), oma=c(1,1,1,1))
hist(dat,freq = FALSE, breaks = 6,main = "Plot of data with smoothed density curve")
points(density(dat), type = "l")
rug(dat)
hist(sam.mean,freq = FALSE,breaks = 25, main = "Bootstrap sampling distribution of the mean", xlab = paste( "Data: n =", n, " , mean =", signif(mean(dat) , digits = 5), " , se =", signif(sd(dat)/sqrt(n)), digits = 5))
points(density(sam.mean), type = "l")
x <- seq(min(sam.mean) , max(sam.mean), length = 1000)
points(x, dnorm(x,mean = mean(dat), sd = sd(dat)/sqrt(n)), type = "l",lwd = 2, col = "red")
rug(sam.mean)
par(old.par)
}
x <- rgamma(10,shape = .5, scale = 20)
bs.one.samp.dist(x)
----


+*Out[1]:*+
----
![png](output_0_0.png)
----


+*In[5]:*+
[source, r]
----
install.packages('sm')
----


+*Out[5]:*+
----
Warning message:
"package 'sm' is in use and will not be installed"----


+*In[4]:*+
[source, r]
----
age <- c(54,42,51,54,49,56,33,58,54,64,49)
par(mfrow=c(2,1))
hist(age,freq = FALSE,breaks = 6)
points(density(age), type = "l")
rug(age)
library(vioplot)
vioplot(age,horizontal=TRUE, col="gray" )
----


+*Out[4]:*+
----
Warning message:
"package 'vioplot' was built under R version 3.6.3"Loading required package: sm
Warning message:
"package 'sm' was built under R version 3.6.3"Package 'sm', version 2.2-5.6: type help(sm) for summary information
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


![png](output_2_1.png)
----


+*In[6]:*+
[source, r]
----
stem(age, scale=2)
----


+*Out[6]:*+
----

  The decimal point is 1 digit(s) to the right of the |

  3 | 3
  3 | 
  4 | 2
  4 | 99
  5 | 1444
  5 | 68
  6 | 4

----


+*In[8]:*+
[source, r]
----
qt(1-0.05/2,df=length(age)-1)
----


+*Out[8]:*+
----
2.22813885198627
----


+*In[9]:*+
[source, r]
----
?t.test
----


+*In[10]:*+
[source, r]
----
t.summary<-t.test(age,mu=50)
t.summary
----


+*Out[10]:*+
----
	One Sample t-test

data:  age
t = 0.51107, df = 10, p-value = 0.6204
alternative hypothesis: true mean is not equal to 50
95 percent confidence interval:
 45.72397 56.82149
sample estimates:
mean of x 
 51.27273 
----


+*In[11]:*+
[source, r]
----
summary(age)
----


+*Out[11]:*+
----   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  33.00   49.00   54.00   51.27   55.00   64.00 ----


+*In[12]:*+
[source, r]
----
bs.one.samp.dist(age)
----


+*Out[12]:*+
----
![png](output_8_0.png)
----


+*In[13]:*+
[source, r]
----
t.dist.pval<-function(t.summary) {
par(mfrow=c(1,1))
lim.extreme <- max(4,abs(t.summary$statistic) + 0.5)
lim.lower <- -lim.extreme;
lim.upper <-lim.extreme;
x.curve <-seq(lim.lower,lim.upper,length=200)
y.curve <-dt(x.curve,df = t.summary$parameter)
plot(x.curve, y.curve, type = "n"
     , ylab =paste("t-dist( df=", signif(t.summary$parameter, 3), ")")
     , xlab =paste("t-stat=", signif(t.summary$statistic, 5)
    , " ï¼ŒShaded area is p-value =", signif(t.summary$p.value, 5)))
if ((t.summary$alternative == "less" )
| (t.summary$alternative == "two.sided ")) {
x.pval.l <- seq(lim.lower,-abs(t.summary$statistic),length=200)
y.pval.l <-dt(x.pval.l, df = t.summary$parameter)
polygon(c(lim.lower,x.pval.l, -abs(t.summary$statistic))
, c(0,y.pval.u,0), col="gray" )
}
if ((t.summary$alternative == "greater")
|(t.summary$alternative == "two.sided")) {
x.pval.u <- seq(abs(t.summary$statistic), lim.upper, length=200)
y.pval.u <- dt(x.pval.u, df = t.summary$parameter)
polygon(c(abs(t.summary$statistic), x.pval.u, lim.upper)
, c(0, y.pval.u, 0), col="gray")
}
points(x.curve, y.curve, type = "l", lwd = 2, col = "blue")
}
t.dist.pval(t.summary)
----


+*Out[13]:*+
----
![png](output_9_0.png)
----


+*In[14]:*+
[source, r]
----
names(t.summary)
----


+*Out[14]:*+
----
. 'statistic'
. 'parameter'
. 'p.value'
. 'conf.int'
. 'estimate'
. 'null.value'
. 'stderr'
. 'alternative'
. 'method'
. 'data.name'
----


+*In[15]:*+
[source, r]
----
t.summary$statistic
----


+*Out[15]:*+
----
*t:* 0.511071452783998
----


+*In[16]:*+
[source, r]
----
t.summary$parameter
----


+*Out[16]:*+
----
*df:* 10
----


+*In[18]:*+
[source, r]
----
print(t.summary$p.vaule)
----


+*Out[18]:*+
----
NULL
----


+*In[19]:*+
[source, r]
----
t.summary$conf.int
----


+*Out[19]:*+
----
. 45.7239667835659
. 56.8214877618887
----


+*In[20]:*+
[source, r]
----
t.summary$estimate
----


+*Out[20]:*+
----
*mean of x:* 51.2727272727273
----


+*In[21]:*+
[source, r]
----
t.summary$null.value
----


+*Out[21]:*+
----
*mean:* 50
----


+*In[22]:*+
[source, r]
----
t.summary$alternative
----


+*Out[22]:*+
----
'two.sided'
----


+*In[23]:*+
[source, r]
----
t.summary$method
----


+*Out[23]:*+
----
'One Sample t-test'
----


+*In[24]:*+
[source, r]
----
t.summary$data.name
----


+*Out[24]:*+
----
'age'
----


+*In[25]:*+
[source, r]
----
toco <- c(5.6,2.7,6.2,2.9,1.5,4.0,4.3,3.0,3.6,2.4,6.7,3.8)
----


+*In[26]:*+
[source, r]
----
par(mfrow=c(2,1))
hist(toco, freq = FALSE, breaks = 6)
points(density(toco), type = "l")
rug(toco)
vioplot(toco, horizontal=TRUE, col="gray" )
----


+*Out[26]:*+
----
![png](output_21_0.png)
----


+*In[27]:*+
[source, r]
----
stem(toco,scale=2)
----


+*Out[27]:*+
----

  The decimal point is at the |

  1 | 5
  2 | 479
  3 | 068
  4 | 03
  5 | 6
  6 | 27

----


+*In[28]:*+
[source, r]
----
qt(1-0.05/2,df=length(toco)-1)
----


+*Out[28]:*+
----
2.20098516009164
----


+*In[29]:*+
[source, r]
----
t.summary<-t.test(toco,mu=0.54)
t.summary
----


+*Out[29]:*+
----
	One Sample t-test

data:  toco
t = 7.3366, df = 11, p-value = 1.473e-05
alternative hypothesis: true mean is not equal to 0.54
95 percent confidence interval:
 2.886161 4.897172
sample estimates:
mean of x 
 3.891667 
----


+*In[30]:*+
[source, r]
----
summary(toco)
----


+*Out[30]:*+
----   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.500   2.850   3.700   3.892   4.625   6.700 ----


+*In[31]:*+
[source, r]
----
t.dist.pval(t.summary)
bs.one.samp.dist(toco)
----


+*Out[31]:*+
----
![png](output_26_0.png)

![png](output_26_1.png)
----


+*In[ ]:*+
[source, r]
----

----
